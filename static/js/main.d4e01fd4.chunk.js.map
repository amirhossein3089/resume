{"version":3,"sources":["components/Fullpage.js","components/Downicon.js","sections/TitlesSection.js","sections/AboutSection.js","components/SkillCard.js","sections/SkillSection.js","App.js","serviceWorker.js","index.js"],"names":["Fullpage","children","this","props","react_default","a","createElement","className","concat","Component","DownIcon","style","display","flexDirection","alignItems","justifyContent","marginBottom","transform","maxWidth","src","icon","TitleSection","state","color","changeColor","_color","_this","setState","_this2","src_components_Fullpage","onMouseOver","onMouseLeave","data","title","subtitle","Object","keys","links","map","key","react_social_icons","url","modules","activeClass","to","spy","smooth","offset","duration","Downicon","icons","down","name","AboutSection","sections","items","p","content","SkillCard","skill","image","alt","SkillSection","eachSkill","src_components_SkillCard","App","sections_TitlesSection","src_sections_AboutSection","src_sections_SkillSection","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d4e01fd4.chunk.js","sourcesContent":["import React,{Component} from 'react'\r\nimport './Fullpage.css'\r\nclass Fullpage extends Component{\r\n    render(){\r\n        const {children} = this.props\r\n        return(\r\n            <div className={`fullpage ${this.props.className || ''}`}>\r\n                {children}\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Fullpage","import React,{Component} from 'react'\r\nconst DownIcon = (props) =>{\r\n    return(\r\n        <div\r\n        style={{\r\n          display:\"flex\",\r\n          flexDirection:\"row\",\r\n          alignItems:\"center\",\r\n          justifyContent:\"center\",\r\n          marginBottom:\"-34px\",\r\n          transform:\"translateY(-45px)\"\r\n        }}\r\n        >\r\n          <div style={{ maxWidth: \"30px\" }}>\r\n            <img src={props.icon} />\r\n          </div>\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default DownIcon;","import React, { Component } from \"react\";\r\nimport data from \"../data.json\";\r\nimport Fullpage from \"../components/Fullpage\";\r\nimport { SocialIcon } from \"react-social-icons\";\r\nimport \"./TitlesSection.css\";\r\nimport DownIcon from \"../components/Downicon\";\r\nimport { Link, Element } from \"react-scroll\";\r\n\r\nclass TitleSection extends Component {\r\n  state = {\r\n    color: \"white\"\r\n  };\r\n  changeColor = _color => {\r\n    this.setState({\r\n      color: _color\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Fullpage className=\"first\">\r\n          <h1\r\n            className=\"title\"\r\n            style={{ color: this.state.color }}\r\n            onMouseOver={() => {\r\n              this.changeColor(\"yellow\");\r\n            }}\r\n            onMouseLeave={() => {\r\n              this.changeColor(\"white\");\r\n            }}\r\n          >\r\n            {data.title}\r\n          </h1>\r\n          <div>\r\n            <h2>{data.subtitle}</h2>\r\n          </div>\r\n          <div className=\"icons-wrapper\">\r\n            {Object.keys(data.links).map(key => {\r\n              return (\r\n                <div className=\"icon\">\r\n                  <SocialIcon url={data.links[key]} />\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </Fullpage>\r\n        <Link\r\n          activeClass=\"active\"\r\n          to=\"about\"\r\n          spy={true}\r\n          smooth={true}\r\n          offset={50}\r\n          duration={500}\r\n        >\r\n          <DownIcon icon={data.icons.down} />\r\n        </Link>\r\n        <Element name=\"about\" className=\"element\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TitleSection;\r\n","import React, { Component } from \"react\";\r\nimport data from \"../data.json\";\r\nimport Fullpage from \"../components/Fullpage\";\r\nimport './AboutSection.css'\r\n\r\nclass AboutSection extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Fullpage className=\"second\">\r\n          <h3>{data.sections[0].title}</h3>\r\n          <div className=\"paragraphs\">\r\n            {data.sections[0].items.map(p => {\r\n              return <p>{p.content}</p>;\r\n            })}\r\n          </div>\r\n        </Fullpage>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AboutSection;\r\n","import React,{Component} from 'react'\r\nimport './SkillCard.css'\r\nclass SkillCard extends Component{\r\n    render(){\r\n        const {skill} = this.props\r\n        return(\r\n            <div className=\"card\">\r\n                <div className=\"image-wrapper\">\r\n                  <img src={skill.content.image} alt=\"\" />\r\n                </div>\r\n                <div className=\"skill-title-wrapper\">\r\n                  <h4>{skill.content.title}</h4>\r\n                </div>\r\n              </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default SkillCard","import React, { Component } from \"react\";\r\nimport data from \"../data.json\";\r\nimport Fullpage from \"../components/Fullpage\";\r\nimport './SkillSection.css'\r\nimport SkillCard from \"../components/SkillCard\"\r\n\r\nclass SkillSection extends Component {\r\n  render() {\r\n    return (\r\n      <Fullpage className=\"third\">\r\n        <h3>{data.sections[1].title}</h3>\r\n        <div className=\"cards-wrapper\">\r\n          {data.sections[1].items.map(eachSkill => {\r\n            return (\r\n              <SkillCard skill = {eachSkill} />\r\n            );\r\n          })}\r\n        </div>\r\n      </Fullpage>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SkillSection;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport TitleSection from './sections/TitlesSection'\nimport AboutSection from './sections/AboutSection'\nimport SkillSection from \"./sections/SkillSection\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"navigation\" />\n        <TitleSection />\n        <AboutSection />\n        <SkillSection />\n      </div>\n\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}